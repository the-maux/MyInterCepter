
package fr.dao.app.Core.Scan;

import android.util.Log;

import java.util.HashMap;
import java.util.Map;

import fr.dao.app.Model.Target.Host;
import fr.dao.app.Model.Target.Ports;
import fr.dao.app.View.Scan.VulnsScanActivity;

import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.CouchDB;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.DNS;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.FTP;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.HTTP;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.IMAP;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.LDAP;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.MongoDB;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.MySQL;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.NTP;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.POP;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.SMB;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.SMTP;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.SSH;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.SSL;
import static fr.dao.app.Core.Scan.ExploitScanner.TypeScanner.TELNET;

//TODO:
//         + Dump all rapport ?
//         + Scan all port ?
//         + Custom nse ?
public class                    ExploitScanner {
    private String              TAG = "ExploitScanner";
    private VulnsScanActivity   mActivity;
    private NmapControler       nmapControler;
    private Host                mHost;
    private boolean             mIsRunning = false, mIsError = false;
    private boolean             isHailMaryMode = false;//TODO: HailMary mode
    private Ports               mHostPorts;
    private boolean             isHostRefreshed = false;

    public enum TypeScanner     {
        FTP, SSH, TELNET, SMTP, DNS, HTTP, SSL, SMB, POP, NTP, IMAP, MySQL, MongoDB, CouchDB, LDAP
    }
    private Map<TypeScanner, String> nmapParam;

    public ExploitScanner(Host host, VulnsScanActivity activity) {
        mHost = host;
        initnmapParam();
        mActivity = activity;
    }

    private void                initnmapParam() {
        nmapParam = new HashMap<>();
        nmapParam.put(FTP, "ftp-anon.nse,ftp-bounce.nse,ftp-brute.nse,ftp-libopie.nse,ftp-proftpd-backdoor.nse,ftp-vsftpd-backdoor.nse,ftp-vuln-cve2010-4221.nse");
        nmapParam.put(SSH, "ssh2-enum-algos.nse,ssh-hostkey.nse,sshv1.nse");
        nmapParam.put(TELNET, "telnet-brute.nse,telnet-encryption.nse");
        nmapParam.put(SMTP, "smtp-brute.nse,smtp-commands.nse,smtp-enum-users.nse,smtp-open-relay.nse,smtp-strangeport.nse,smtp-vuln-cve2010-4344.nse,smtp-vuln-cve2011-1720.nse,smtp-vuln-cve2011-1764.nse");
        nmapParam.put(DNS, "ns-blacklist.nse,dns-brute.nse,dns-cache-snoop.nse,dns-check-zone.nse,dns-client-subnet-scan.nse,dns-fuzz.nse,dns-ip6-arpa-scan.nse,dns-nsec3-enum.nse,dns-nsec-enum.nse,dns-nsid.nse,dns-random-srcport.nse,dns-random-txid.nse,dns-recursion.nse,dns-service-discovery.nse,dns-srv-enum.nse,dns-update.nse,dns-zeustracker.nse,dns-zone-transfer.nse");
        nmapParam.put(HTTP, "http-adobe-coldfusion-apsa1301.nse,http-affiliate-id.nse,http-apache-negotiation.nse,http-auth-finder.nse,http-auth.nse,http-awstatstotals-exec.nse,http-axis2-dir-traversal.nse,http-backup-finder.nse,http-barracuda-dir-traversal.nse,http-brute.nse,http-cakephp-version.nse,http-chrono.nse,http-coldfusion-subzero.nse,http-comments-displayer.nse,http-config-backup.nse,http-cors.nse,http-date.nse,http-default-accounts.nse,http-domino-enum-passwords.nse,http-drupal-enum-users.nse,http-drupal-modules.nse,http-email-harvest.nse,http-enum.nse,http-exif-spider.nse,http-favicon.nse,http-fileupload-exploiter.nse,http-form-brute.nse,http-form-fuzzer.nse,http-frontpage-login.nse,http-generator.nse,http-git.nse,http-gitweb-projects-enum.nse,http-google-malware.nse,http-grep.nse,http-headers.nse,http-huawei-hg5xx-vuln.nse,http-icloud-findmyiphone.nse,http-icloud-sendmsg.nse,http-iis-webdav-vuln.nse,http-joomla-brute.nse,http-litespeed-sourcecode-download.nse,http-majordomo2-dir-traversal.nse,http-malware-host.nse,http-methods.nse,http-method-tamper.nse,http-open-proxy.nse,http-open-redirect.nse,http-passwd.nse,http-phpmyadmin-dir-traversal.nse,http-phpself-xss.nse,http-php-version.nse,http-plesk-backdoor.nse,http-proxy-brute.nse,http-put.nse,http-qnap-nas-info.nse,http-rfi-spider.nse,http-robots.txt.nse,http-robtex-reverse-ip.nse,http-robtex-shared-ns.nse,http-sitemap-generator.nse,http-slowloris-check.nse,http-slowloris.nse,http-sql-injection.nse,http-stored-xss.nse,http-title.nse,http-tplink-dir-traversal.nse,http-trace.nse,http-traceroute.nse,http-unsafe-output-escaping.nse,http-userdir-enum.nse,http-vhosts.nse,http-virustotal.nse,http-vlcstreamer-ls.nse,http-vmware-path-vuln.nse,http-vuln-cve2009-3960.nse,http-vuln-cve2010-0738.nse,http-vuln-cve2010-2861.nse,http-vuln-cve2011-3192.nse,http-vuln-cve2011-3368.nse,http-vuln-cve2012-1823.nse,http-vuln-cve2013-0156.nse,http-waf-detect.nse,http-waf-fingerprint.nse,http-wordpress-brute.nse,http-wordpress-enum.nse,http-wordpress-plugins.nse");
        nmapParam.put(SSL, "ssl-cert.nse,ssl-date.nse,ssl-enum-ciphers.nse,ssl-google-cert-catalog.nse,ssl-known-keys.nse,sslv2.nse");
        nmapParam.put(SMB, "smb-brute.nse,smb-check-vulns.nse,smb-enum-domains.nse,smb-enum-groups.nse,smb-enum-processes.nse,smb-enum-sessions.nse,smb-enum-shares.nse,smb-enum-users.nse,smb-flood.nse,smb-ls.nse,smb-mbenum.nse,smb-os-discovery.nse,smb-print-text.nse,smb-psexec.nse,smb-security-mode.nse,smb-server-stats.nse,smb-system-info.nse,smbv2-enabled.nse,smb-vuln-ms10-054.nse,smb-vuln-ms10-061.nse");
        nmapParam.put(POP, "pop3-brute.nse,pop3-capabilities.nse");
        nmapParam.put(NTP, "ntp-info.nse,ntp-monlist.nse");
        nmapParam.put(IMAP, "imap-brute.nse,imap-capabilities.nse");
        nmapParam.put(MySQL, "mysql-audit.nse,mysql-brute.nse,mysql-databases.nse,mysql-dump-hashes.nse,mysql-empty-password.nse,mysql-enum.nse,mysql-info.nse,mysql-query.nse,mysql-users.nse,mysql-variables.nse,mysql-vuln-cve2012-2122.nse");
        nmapParam.put(MongoDB, "mongodb-brute.nse,mongodb-databases.nse,mongodb-info.nse");
        nmapParam.put(CouchDB, "couchdb-databases.nse,couchdb-stats.nse");
        nmapParam.put(LDAP, "ldap-brute.nse,ldap-novell-getpass.nse,ldap-rootdse.nse,ldap-search.nse");
    }

    public ExploitScanner       actualizeStatus() {
        //Check si le host est toujours en vie
        new NmapControler(this, null, mHost, true);
        return this;
    }

    public void                 hostActualized() {
        mHostPorts = mHost.getPorts();
        isHostRefreshed = true;
        //TODO: If HAILMARY GO TO RUN
        if (isHailMaryMode)
            runHailMary(null);
        else
            mActivity.onHostActualized(null);
        runHailMary(null);
    }

    public boolean              isHostRefreshed() {
        return isHostRefreshed;
    }

    public void                 onNseScanFinished(String fullDUMP, TypeScanner type) {
        Log.i(TAG, type.name() + " Script Finished");
        Log.i(TAG, fullDUMP);
    }

    private void                execScan(TypeScanner scanType, boolean scriptArgs, int port) {
        //TODO: Exec the Nmap, if the output is not null => host.rapport.add(Rapport)
        String cmd = " -p " + port +
                " --script=" + nmapParam.get(scanType) +
                ((scriptArgs) ? " --script-args userdb=user.txt,passdb=pass.txt " : " ") +
                mHost.ip;
        Log.i(TAG, "SCANNER[" + scanType.name() + " -> " + cmd);
        new NmapControler(this, scanType, cmd);
    }

    public void                 scanDispatcher(TypeScanner type) {
        switch (type) {
            case DNS:
                scanDNS();
                break;
            case FTP:
                scanFtp();
                break;
            case NTP:
                scanNtp();
                break;
            case POP:
                scanPop();
                break;
            case SMB:
                scanSmb();
                break;
            case SSH:
                scanSsh();
                break;
            case SSL:
                scanSsl();
                break;
            case HTTP:
                scanHttp();
                break;
            case IMAP:
                scanImap();
                break;
            case LDAP:
                scanLDAP();
                break;
            case SMTP:
                scanSmtp();
                break;
            case MySQL:
                scanMySQL();
                break;
            case TELNET:
                scanTelnet();
                break;
            case CouchDB:
                scanCouchdb();
                break;
            case MongoDB:
                scanMongoDB();
                break;
        }
    }

    private ExploitScanner      scanFtp() {

        return this;
    }
    private ExploitScanner      scanSsh() {
        //exec_command="nmap -p 22 $output --script=ssh2-enum-algos.nse,ssh-hostkey.nse,sshv1.nse --script-args userdb=user.txt,passdb=pass.txt $ip "
        return this;
    }
    private ExploitScanner      scanTelnet() {
        //exec_command="nmap -p 23 $output --script=$nse --script-args userdb=user.txt,passdb=pass.txt $ip "
        return this;
    }
    private ExploitScanner      scanSmtp() {
        //exec_command="nmap -p 25 $output --script=$nse --script-args userdb=user.txt,passdb=pass.txt $ip "
        return this;
    }
    private ExploitScanner      scanDNS() {
        //exec_command="nmap -p 53 $output --script=$nse $ip "
        return this;
    }
    private ExploitScanner      scanHttp() {
        //
        //exec_command="nmap -p 80 $output --script=$nse --script-args userdb=user.txt,passdb=pass.txt $ip "
        return this;
    }
    private ExploitScanner      scanSsl() {
        //
        //exec_command="nmap -p 443 $output --script=$nse $ip "
        return this;
    }
    private ExploitScanner      scanSmb() {
        //
        //exec_command="nmap -p 445 $output --script=$nse --script-args userdb=user.txt,passdb=pass.txt $ip "
        return this;
    }
    private ExploitScanner      scanPop() {
        //
        //exec_command="nmap -p 110 $output --script=$nse --script-args userdb=user.txt,passdb=pass.txt $ip "
        return this;
    }
    private ExploitScanner      scanNtp() {
        //
        //exec_command="nmap -p 123 $output --script=$nse $ip "
        return this;
    }
    private ExploitScanner      scanImap() {
        //
        //exec_command="nmap -p 143 $output --script=$nse --script-args userdb=user.txt,passdb=pass.txt $ip "
        return this;
    }
    private ExploitScanner      scanMySQL() {
        //exec_command="nmap -p 3306 $output --script=$nse --script-args userdb=user.txt,passdb=pass.txt $ip "
        return this;
    }
    private ExploitScanner      scanMongoDB() {
        //exec_command="nmap -p 27017 $output --script=$nse --script-args userdb=user.txt,passdb=pass.txt $ip "
        return this;
    }
    private ExploitScanner      scanCouchdb() {
        //exec_command="nmap -p 5984 $output --script=$nse $ip "
        return this;
    }
    private ExploitScanner      scanLDAP() {
        //exec_command="nmap -p 389 $output --script=$nse --script-args userdb=user.txt,passdb=pass.txt $ip "
        return this;
    }

    public ExploitScanner runHailMary(Runnable runAfterScan) {
        if (mHost.getPorts() == null) {
            Log.e(TAG, "Can't scan [] cause no port loaded");//Try to scan again ?
            mIsError = true;
            return this;
        }
        mIsRunning = true;
        if (mHostPorts.isPortOpen(21))
            scanFtp();
        if (mHostPorts.isPortOpen(22))
            scanSsh();
        if (mHostPorts.isPortOpen(23))
            scanTelnet();
        if (mHostPorts.isPortOpen(25))
            scanSmtp();
        if (mHostPorts.isPortOpen(53))
            scanDNS();//--script-args dns-brute.threads=5,dns-brute.hostlist=wordlist.txt
        if (mHostPorts.isPortOpen(80))
            scanHttp();
        if (mHostPorts.isPortOpen(443))
            scanSsl();
        if (mHostPorts.isPortOpen(445))
            scanSmb();
        if (mHostPorts.isPortOpen(110))
            scanPop();
        if (mHostPorts.isPortOpen(123))
            scanNtp();
        if (mHostPorts.isPortOpen(143))
            scanImap();
        if (mHostPorts.isPortOpen(3306))
            scanMySQL();
        if (mHostPorts.isPortOpen(27017))
            scanMongoDB();
        if (mHostPorts.isPortOpen(5984))
            scanCouchdb();
        if (mHostPorts.isPortOpen(389))
            scanLDAP();
        if (runAfterScan != null)
            new Thread(runAfterScan).start();
        //TODO: print in ALL ItemTab the result of nmap
        mIsRunning = false;
        return this;
    }

}